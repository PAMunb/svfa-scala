package br.unb.cic.android

trait TaintBenchSpec {
  val sourceList = List(
      "<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>",
      "<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
      "<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>",
      "<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
      "<android.content.Intent: android.os.Bundle getExtras()>",
      "<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>",
      "<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>",
      "<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>",
      "<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>",
      "<android.database.Cursor: int getInt(int)>",
      "<android.database.Cursor: java.lang.String getString(int)>",
      "<android.database.Cursor: long getLong(int)>",
      "<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
      "<android.location.Location: double getLongitude()>",
      "<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>",
      "<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>",
      "<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>",
      "<android.os.Environment: java.io.File getExternalStorageDirectory()>",
      "<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>",
      "<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>",
      "<android.telephony.SmsMessage: java.lang.String getDisplayOriginatingAddress()>",
      "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
      "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>",
      "<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>",
      "<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>",
      "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>",
      "<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>",
      "<android.telephony.gsm.GsmCellLocation: int getLac()>",
      "<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>",
      "<android.telephony.gsm.SmsMessage: java.lang.String getDisplayMessageBody()>",
      "<android.widget.EditText: android.text.Editable getText()>",
      "<com.example.bankmanager.BankActivity: android.view.View findViewById(int)>",
      "<com.google.elements.Utils: java.lang.String getDeviceId()>",
      "<exts.whats.activities.Cards: android.view.View findViewById(int)>",
      "<frhfsd.siksdk.ujdsfjkfsd.WrehifsdkjsActivity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
      "<java.io.File: java.io.File[] listFiles()>",
      "<java.io.File: void <init>,(java.io.File,java.lang.String)>",
      "<java.io.File: void <init>,(java.lang.String)>",
      "<java.io.FileInputStream: void <init>,(java.io.File)>",
      "<java.io.FileInputStream: void <init>,(java.lang.String)>",
      "<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>",
      "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
      "<java.net.URL: java.io.InputStream openStream()>",
      "<org.apache.http.HttpEntity: java.io.InputStream getContent()>",
  )

  val sinkList = List(
      "<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
      "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
      "<android.content.Context: void startActivity(android.content.Intent)>",
      "<android.content.SharedPreferences$Editor: boolean commit()>",
      "<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
      "<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
      "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
      "<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String,java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>",
      "<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
      "<android.util.Log: int i(java.lang.String,java.lang.String)>",
      "<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>",
      "<com.android.tools.system.MyPostRequest: android.os.AsyncTask execute(java.lang.Object[])>",
      "<com.baidu.inf.iis.bcs.BaiduBCS: com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(com.baidu.inf.iis.bcs.request.PutObjectRequest)>",
      "<com.example.service.InstallService: void startActivity(android.content.Intent)>",
      "<com.movieshow.down.Badaccents: void startActivity(android.content.Intent)>",
      "<exts.whats.activities.Cards: android.content.ComponentName startService(android.content.Intent)>",
      "<java.io.BufferedWriter: void write(java.lang.String)>",
      "<java.io.DataOutputStream: void flush()>",
      "<java.io.DataOutputStream: void write(byte[])>",
      "<java.io.DataOutputStream: void write(byte[],int,int)>",
      "<java.io.DataOutputStream: void writeBytes(java.lang.String)>",
      "<java.io.DataOutputStream: void writeUTF(java.lang.String)>",
      "<java.io.File: boolean delete()>",
      "<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>",
      "<java.io.FileWriter: void write(java.lang.String)>",
      "<java.io.OutputStream: void write(byte[])>",
      "<java.io.OutputStream: void write(byte[],int,int)>",
      "<java.io.OutputStreamWriter: void write(java.lang.String)>",
      "<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>",
      "<java.io.PrintWriter: void println(java.lang.String)>",
      "<java.io.PrintWriter: void write(java.lang.String)>",
      "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
      "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
      "<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>",
      "<java.net.HttpURLConnection: void connect()>",
      "<java.net.URLConnection: java.io.InputStream getInputStream()>",
      "<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>",
      "<javax.mail.Transport: void sendMessage(javax.mail.Message,javax.mail.Address[])>",
      "<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
      "<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
      "<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>",
      "<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>",
  )
}