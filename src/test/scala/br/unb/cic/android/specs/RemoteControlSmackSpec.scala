package br.unb.cic.android.specs

import br.unb.cic.android.TaintBenchSpec

trait RemoteControlSmackSpec extends TaintBenchSpec {
//  URL https://github.com/TaintBench/remote_control_smack/blob/master/README.md
  override val sourceList = List(
    "<android.view.ScaleGestureDetector: float getFocusX()>",
    "<android.os.Message: android.os.Handler getTarget()>",
    "<java.io.ByteArrayOutputStream: byte[] toByteArray()>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>",
    "<java.util.BitSet: boolean get(int)>",
    "<java.net.InetAddress: java.lang.String getHostName()>",
    "<android.view.KeyEvent: int getAction()>",
    "<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<java.util.Calendar: java.util.TimeZone getTimeZone()>",
    "<android.os.Messenger: android.os.IBinder getBinder()>",
    "<android.telephony.gsm.GsmCellLocation: int getLac()>",
    "<android.view.View: int getMeasuredHeight()>",
    "<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>",
    "<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>",
    "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>",
    "<java.net.InetAddress: java.lang.String getHostAddress()>",
    "<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>",
    "<android.os.StatFs: int getBlockSize()>",
    "<android.location.Location: float getBearing()>",
    "<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>",
    "<java.io.File: java.lang.String getName()>",
    "<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>",
    "<android.os.StatFs: int getAvailableBlocks()>",
    "<org.apache.commons.codec.binary.Base64: byte[] discardWhitespace(byte[])>",
    "<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>",
    "<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>",
    "<javax.xml.transform.TransformerException: java.lang.Throwable getException()>",
    "<java.lang.String: byte[] getBytes()>",
    "<java.util.Calendar: java.util.Calendar getInstance()>",
    "<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<java.io.File: java.lang.String getPath()>",
    "<android.view.View: int getId()>",
    "<android.location.Location: float getAccuracy()>",
    "<android.app.Activity: android.view.WindowManager getWindowManager()>",
    "<android.telephony.gsm.GsmCellLocation: int getCid()>",
    "<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>",
    "<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
    "<java.net.URISyntaxException: java.lang.String getMessage()>",
    "<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>",
    "<java.net.Socket: java.net.InetAddress getInetAddress()>",
    "<java.io.File: java.lang.String getParent()>",
    "<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>",
    "<java.io.BufferedReader: java.lang.String readLine()>",
    "<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>",
    "<android.os.Bundle: java.lang.String[] getStringArray(java.lang.String)>",
    "<java.util.AbstractMap: java.lang.Object clone()>",
    "<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>",
    "<android.content.Intent: java.lang.String getAction()>",
    "<java.net.URL: java.lang.Object getContent()>",
    "<android.view.MotionEvent: float getY(int)>",
    "<android.net.NetworkInfo: java.lang.String getExtraInfo()>",
    "<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>",
    "<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>",
    "<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>",
    "<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>",
    "<android.widget.OverScroller: int getCurrX()>",
    "<android.os.Bundle: int getInt(java.lang.String)>",
    "<java.util.HashMap: java.lang.Object get(java.lang.Object)>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<android.os.Bundle: java.lang.Object get(java.lang.String)>",
    "<android.view.ScaleGestureDetector: float getScaleFactor()>",
    "<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>",
    "<android.database.Cursor: int getInt(int)>",
    "<android.view.KeyEvent: int getKeyCode()>",
    "<android.app.Dialog: android.view.Window getWindow()>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<android.telephony.NeighboringCellInfo: int getCid()>",
    "<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>",
    "<java.net.InetAddress: java.net.InetAddress getLocalHost()>",
    "<android.view.MotionEvent: int getPointerCount()>",
    "<java.util.Date: long getTime()>",
    "<android.view.VelocityTracker: float getYVelocity()>",
    "<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
    "<java.text.DateFormat: java.lang.String format(java.util.Date)>",
    "<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>",
    "<android.content.ComponentName: java.lang.String getClassName()>",
    "<java.util.TimeZone: java.lang.String getID()>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
    "<android.net.NetworkInfo: int getType()>",
    "<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>",
    "<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>",
    "<java.lang.Class: java.lang.ClassLoader getClassLoader()>",
    "<android.location.Address: java.lang.String getAdminArea()>",
    "<android.location.Location: float getSpeed()>",
    "<android.widget.Scroller: int getCurrY()>",
    "<java.lang.ref.SoftReference: java.lang.Object get()>",
    "<java.lang.String: void getChars(int,int,char[],int)>",
    "<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<android.view.ScaleGestureDetector: float getFocusY()>",
    "<android.view.ViewConfiguration: int getMinimumFlingVelocity()>",
    "<android.database.Cursor: java.lang.String getString(int)>",
    "<org.apache.commons.codec.binary.Base64: byte[] discardNonBase64(byte[])>",
    "<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
    "<android.os.Bundle: float getFloat(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>",
    "<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>",
    "<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>",
    "<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>",
    "<android.telephony.TelephonyManager: int getSimState()>",
    "<java.io.RandomAccessFile: boolean readBoolean()>",
    "<android.os.Environment: java.io.File getRootDirectory()>",
    "<android.view.View: int getMeasuredWidth()>",
    "<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>",
    "<java.io.ObjectInputStream: java.lang.Object readObject()>",
    "<android.view.View: android.view.ViewParent getParent()>",
    "<java.util.Calendar: int get(int)>",
    "<java.lang.System: java.lang.String getProperty(java.lang.String)>",
    "<android.graphics.Bitmap: int getHeight()>",
    "<android.view.VelocityTracker: float getYVelocity(int)>",
    "<java.lang.Boolean: boolean getBoolean(java.lang.String)>",
    "<java.util.TimeZone: int getOffset(long)>",
    "<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>",
    "<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>",
    "<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>",
    "<android.os.Environment: java.io.File getExternalStorageDirectory()>",
    "<android.graphics.Bitmap: int getWidth()>",
    "<android.view.ViewConfiguration: int getScaledTouchSlop()>",
    "<java.net.Socket: java.io.OutputStream getOutputStream()>",
    "<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>",
    "<android.os.Bundle: long getLong(java.lang.String)>",
    "<java.security.KeyStore: void load(java.io.InputStream,char[])>",
    "<android.widget.EditText: android.text.Editable getText()>",
    "<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>",
    "<java.io.File: java.io.File[] listFiles()>",
    "<java.util.Locale: java.lang.String getLanguage()>",
    "<android.view.VelocityTracker: float getXVelocity(int)>",
    "<android.content.Intent: int getIntExtra(java.lang.String,int)>",
    "<java.io.File: java.lang.String getAbsolutePath()>",
    "<java.text.NumberFormat: java.lang.String format(long)>",
    "<android.telephony.SmsMessage: java.lang.String getDisplayMessageBody()>",
    "<android.os.Bundle: int getInt(java.lang.String,int)>",
    "<android.view.MotionEvent: float getX()>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>",
    "<java.net.URLConnection: int getContentLength()>",
    "<java.util.zip.ZipEntry: java.lang.String getName()>",
    "<android.location.Location: double getLongitude()>",
    "<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>",
    "<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>",
    "<android.view.Display: int getHeight()>",
    "<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>",
    "<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>",
    "<java.lang.reflect.Field: int getModifiers()>",
    "<java.net.URL: java.lang.String getPath()>",
    "<android.os.Message: android.os.Bundle getData()>",
    "<android.view.MotionEvent: int getPointerId(int)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>",
    "<java.net.Socket: int getPort()>",
    "<java.io.Reader: long skip(long)>",
    "<java.security.KeyStore: java.lang.String getDefaultType()>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>",
    "<java.util.Calendar: long getTimeInMillis()>",
    "<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>",
    "<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>",
    "<java.util.Locale: java.util.Locale getDefault()>",
    "<java.io.RandomAccessFile: int readInt()>",
    "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
    "<android.graphics.drawable.Drawable: int getIntrinsicHeight()>",
    "<org.json.JSONObject: long getLong(java.lang.String)>",
    "<java.net.URL: java.io.InputStream openStream()>",
    "<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>",
    "<android.view.Display: void getMetrics(android.util.DisplayMetrics)>",
    "<java.lang.Long: long parseLong(java.lang.String,int)>",
    "<android.location.Location: double getAltitude()>",
    "<android.widget.Scroller: int getCurrX()>",
    "<android.view.Display: int getWidth()>",
    "<android.os.Environment: java.io.File getDataDirectory()>",
    "<android.content.Intent: android.content.Intent getIntent(java.lang.String)>",
    "<java.lang.ref.Reference: java.lang.Object get()>",
    "<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<android.telephony.NeighboringCellInfo: int getLac()>",
    "<android.view.MotionEvent: int getAction()>",
    "<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>",
    "<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>",
    "<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>",
    "<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>",
    "<java.net.HttpURLConnection: int getResponseCode()>",
    "<android.location.GpsStatus: java.lang.Iterable getSatellites()>",
    "<android.view.MotionEvent: float getY()>",
    "<android.view.ViewConfiguration: int getMaximumFlingVelocity()>",
    "<android.os.Bundle: float getFloat(java.lang.String,float)>",
    "<java.util.Calendar: java.util.Date getTime()>",
    "<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>",
    "<java.net.Socket: java.io.InputStream getInputStream()>",
    "<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>",
    "<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>",
    "<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
    "<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
    "<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>",
    "<android.graphics.drawable.Drawable: int getIntrinsicWidth()>",
    "<android.os.Environment: java.lang.String getExternalStorageState()>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>",
    "<android.os.Bundle: boolean getBoolean(java.lang.String)>",
    "<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>",
    "<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<java.io.File: java.io.File getParentFile()>",
    "<android.widget.ImageView: android.widget.ImageView$ScaleType getScaleType()>",
    "<android.graphics.Matrix: void getValues(float[])>",
    "<org.json.JSONArray: java.lang.Object get(int)>",
    "<android.content.Context: java.lang.String getString(int)>",
    "<android.net.Proxy: java.lang.String getDefaultHost()>",
    "<android.content.pm.Signature: byte[] toByteArray()>",
    "<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>",
    "<org.json.JSONObject: int getInt(java.lang.String)>",
    "<android.location.Location: double getLatitude()>",
    "<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
    "<android.os.HandlerThread: android.os.Looper getLooper()>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<java.util.TimeZone: java.util.TimeZone getDefault()>",
    "<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>",
    "<java.lang.Class: java.lang.String getSimpleName()>",
    "<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>",
    "<android.net.Proxy: int getDefaultPort()>",
    "<java.lang.Boolean: boolean parseBoolean(java.lang.String)>",
    "<android.app.AlertDialog$Builder: android.app.AlertDialog show()>",
    "<android.view.MotionEvent: long getDownTime()>",
    "<android.telephony.SignalStrength: int getCdmaDbm()>",
    "<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>",
    "<java.security.MessageDigest: byte[] digest(byte[])>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>",
    "<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>",
    "<java.io.RandomAccessFile: byte readByte()>",
    "<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<java.io.FileInputStream: void <init>",
    "<java.util.ArrayList: java.lang.Object get(int)>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>",
    "<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>",
    "<java.io.RandomAccessFile: double readDouble()>",
    "<android.widget.TextView: java.lang.CharSequence getText()>",
    "<android.os.Bundle: java.lang.String getString(java.lang.String)>",
    "<android.content.Intent: android.os.Bundle getExtras()>",
    "<java.security.MessageDigest: byte[] digest()>",
    "<android.view.MotionEvent: float getX(int)>",
    "<java.util.Hashtable: java.lang.Object get(java.lang.Object)>",
    "<java.net.ServerSocket: int getLocalPort()>",
    "<android.view.MotionEvent: long getEventTime()>",
    "<java.lang.String: byte[] getBytes(java.lang.String)>",
    "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>",
    "<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>",
    "<android.widget.OverScroller: int getCurrY()>",
    "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>",
    "<android.location.Address: java.lang.String getAddressLine(int)>",
    "<java.lang.Class: java.lang.String getName()>",
    "<android.telephony.SignalStrength: int getGsmSignalStrength()>",
    "<android.os.StatFs: int getBlockCount()>",
    "<android.location.Location: long getTime()>",
    "<android.net.wifi.WifiInfo: java.lang.String getBSSID()>",
    "<android.view.View: java.lang.Object getTag()>",
    "<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>",
    "<android.database.Cursor: long getLong(int)>",
    "<android.net.wifi.WifiManager: java.util.List getScanResults()>",
    "<java.io.RandomAccessFile: float readFloat()>",
    "<android.view.ViewGroup: android.view.View getChildAt(int)>",
    "<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>",
    "<java.io.File: boolean delete()>",
    "<java.io.RandomAccessFile: long readLong()>",
    "<android.os.Bundle: double getDouble(java.lang.String)>",
    "<java.io.File: void <init>",
    "<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>",
    "<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>",
    "<android.location.Address: int getMaxAddressLineIndex()>",
    "<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>",
    "<android.net.NetworkInfo: java.lang.String getTypeName()>",
    "<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>",
    "<android.telephony.TelephonyManager: int getNetworkType()>",
    "<android.util.SparseArray: java.lang.Object get(int)>",
    "<android.telephony.NeighboringCellInfo: int getRssi()>",
    "<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>",
    "<android.view.VelocityTracker: float getXVelocity()>",
  )

  override val sinkList = List(
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>",
    "<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View$OnClickListener)>",
    "<java.lang.StringBuffer: void setCharAt(int,char)>",
    "<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>",
    "<java.lang.String: java.lang.String substring(int,int)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<java.io.PrintStream: void println(int)>",
    "<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>",
    "<android.os.Bundle: void putDouble(java.lang.String,double)>",
    "<android.graphics.RectF: void set(float,float,float,float)>",
    "<android.content.Intent: android.content.Intent setType(java.lang.String)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
    "<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>",
    "<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>",
    "<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>",
    "<java.io.OutputStream: void write(byte[],int,int)>",
    "<java.io.PrintStream: void print(java.lang.String)>",
    "<java.net.URL: java.net.URLConnection openConnection()>",
    "<java.util.BitSet: void set(int)>",
    "<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>",
    "<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>",
    "<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>",
    "<java.io.RandomAccessFile: void write(byte[],int,int)>",
    "<java.lang.Math: double log(double)>",
    "<java.io.FileWriter: java.io.Writer append(java.lang.CharSequence)>",
    "<java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.util.concurrent.ThreadFactory)>",
    "<android.app.Activity: void onCreate(android.os.Bundle)>",
    "<android.os.Bundle: void putString(java.lang.String,java.lang.String)>",
    "<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>",
    "<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)>",
    "<java.lang.Long: long parseLong(java.lang.String,int)>",
    "<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>",
    "<android.util.Log: int e(java.lang.String,java.lang.String)>",
    "<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View$OnClickListener)>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>",
    "<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>",
    "<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>",
    "<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>",
    "<android.os.Messenger: void send(android.os.Message)>",
    "<android.util.Log: int d(java.lang.String,java.lang.String)>",
    "<android.content.Intent: android.content.Intent setFlags(int)>",
    "<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>",
    "<android.os.Bundle: void putByteArray(java.lang.String,byte[])>",
    "<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>",
    "<java.lang.StringBuilder: void setCharAt(int,char)>",
    "<java.net.HttpURLConnection: void connect()>",
    "<android.media.MediaRecorder: void setOutputFile(java.lang.String)>",
    "<android.widget.TextView: void setText(java.lang.CharSequence)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>",
    "<android.os.Bundle: void putInt(java.lang.String,int)>",
    "<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>",
    "<android.support.v4.view.ViewPager: void setCurrentItem(int)>",
    "<java.util.Calendar: void setTime(java.util.Date)>",
    "<android.os.Bundle: void putFloat(java.lang.String,float)>",
    "<java.io.ObjectOutputStream: void writeInt(int)>",
    "<java.util.Calendar: void setTimeInMillis(long)>",
    "<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>",
    "<android.util.Log: int v(java.lang.String,java.lang.String)>",
    "<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>",
    "<java.io.PrintStream: void println(java.lang.Object)>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder$OnInfoListener)>",
    "<android.os.Bundle: void putLong(java.lang.String,long)>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>",
    "<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)>",
    "<android.content.SharedPreferences$Editor: boolean commit()>",
    "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>",
    "<android.app.ProgressDialog: void setProgressStyle(int)>",
    "<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setData(android.net.Uri)>",
    "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
    "<java.lang.StringBuffer: void setLength(int)>",
    "<java.io.RandomAccessFile: void writeFloat(float)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<java.io.FileOutputStream: void write(byte[],int,int)>",
    "<java.io.OutputStreamWriter: void <init>",
    "<java.net.ServerSocket: void setSoTimeout(int)>",
    "<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
    "<java.lang.Boolean: boolean parseBoolean(java.lang.String)>",
    "<android.os.Handler: boolean sendEmptyMessage(int)>",
    "<android.util.Log: int i(java.lang.String,java.lang.String)>",
    "<java.io.RandomAccessFile: void writeDouble(double)>",
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
    "<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>",
    "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
    "<android.app.Activity: void startActivity(android.content.Intent)>",
    "<java.lang.String: java.lang.String replace(char,char)>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>",
    "<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>",
    "<android.view.Window: void setType(int)>",
    "<android.widget.ImageView: void setImageURI(android.net.Uri)>",
    "<java.net.URL: void <init>",
    "<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus$NmeaListener)>",
    "<java.io.OutputStream: void write(byte[])>",
    "<java.io.ObjectOutputStream: void writeBoolean(boolean)>",
    "<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>",
    "<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>",
    "<android.content.Context: void startActivity(android.content.Intent)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>",
    "<android.os.Bundle: void putBoolean(java.lang.String,boolean)>",
    "<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
    "<java.io.Writer: void write(java.lang.String)>",
    "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
    "<org.apache.http.client.params.HttpClientParams: void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String)>",
    "<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>",
    "<java.io.Writer: void write(char[])>",
    "<android.widget.TextView: void setTextColor(int)>",
    "<java.lang.Thread: void setName(java.lang.String)>",
    "<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>",
    "<java.lang.String: boolean startsWith(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setAction(java.lang.String)>",
    "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
    "<android.graphics.Matrix: void set(android.graphics.Matrix)>",
    "<android.os.Handler: boolean sendMessage(android.os.Message)>",
    "<java.util.zip.ZipOutputStream: void write(byte[],int,int)>",
    "<android.view.Window: void setFlags(int,int)>",
    "<android.widget.TextView: void setTextSize(float)>",
    "<java.lang.ProcessBuilder: java.lang.Process start()>",
    "<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>",
    "<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>",
    "<java.io.PrintWriter: void println(java.lang.String)>",
    "<java.io.ObjectOutputStream: void writeFloat(float)>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.widget.ImageView: void setImageResource(int)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>",
    "<java.io.File: boolean delete()>",
    "<java.io.RandomAccessFile: void write(byte[])>",
    "<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>",
    "<java.lang.StringBuilder: void setLength(int)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>",
    "<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>",
    "<android.os.Bundle: void putIntArray(java.lang.String,int[])>",
    "<java.io.FileOutputStream: void <init>",
    "<java.io.FileOutputStream: void write(byte[])>",
    "<android.location.Location: void setTime(long)>",
    "<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>",
    "<android.os.Message: void setData(android.os.Bundle)>",
    "<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
    "<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>",
    "<android.app.ProgressDialog: void setProgress(int)>",
    "<android.widget.LinearLayout: void setOrientation(int)>",
    "<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>",
    "<android.widget.TextView: void setPadding(int,int,int,int)>",
    "<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>",
    "<java.lang.Thread: void setDaemon(boolean)>",
    "<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>",
    "<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>",
    "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
  )
}