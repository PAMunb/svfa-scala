package br.unb.cic.android.specs

import br.unb.cic.android.TaintBenchSpec

trait Overlaylocker2AndroidSampSpec extends TaintBenchSpec {
//  URL https://github.com/TaintBench/overlaylocker2_android_samp/blob/master/README.md
  override val sourceList = List(
    "<android.view.View: int getWidth()>",
    "<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>",
    "<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<android.app.ActivityManager: java.util.List getRunningTasks(int)>",
    "<android.view.View: void getLocationOnScreen(int[])>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
    "<android.net.NetworkInfo: int getType()>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>",
    "<android.content.res.Resources: android.content.res.AssetManager getAssets()>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<java.io.FileInputStream: void <init>",
    "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>",
    "<android.webkit.WebView: void loadUrl(java.lang.String)>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>",
    "<java.io.File: java.lang.String getName()>",
    "<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>",
    "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
    "<android.os.Bundle: java.lang.String getString(java.lang.String)>",
    "<android.database.Cursor: java.lang.String getString(int)>",
    "<java.util.Calendar: java.util.Calendar getInstance()>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
    "<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>",
    "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>",
    "<android.content.Intent: android.os.Bundle getExtras()>",
    "<android.view.View: int getHeight()>",
    "<java.net.URL: java.io.InputStream openStream()>",
    "<android.telephony.TelephonyManager: int getSimState()>",
    "<android.os.Environment: java.io.File getRootDirectory()>",
    "<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>",
    "<android.os.Environment: java.io.File getDataDirectory()>",
    "<java.io.BufferedReader: java.lang.String readLine()>",
    "<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>",
    "<java.lang.Class: java.lang.String getName()>",
    "<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>",
    "<java.io.File: long getUsableSpace()>",
    "<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>",
    "<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>",
    "<android.os.Environment: java.io.File getExternalStorageDirectory()>",
    "<java.net.HttpURLConnection: int getResponseCode()>",
    "<android.telephony.SmsMessage: java.lang.String getMessageBody()>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>",
    "<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>",
    "<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
    "<android.app.ActivityManager: java.util.List getRunningAppProcesses()>",
    "<java.io.File: java.io.File[] listFiles()>",
    "<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>",
    "<android.os.Environment: java.lang.String getExternalStorageState()>",
    "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>",
    "<java.io.File: void <init>",
    "<java.io.File: java.lang.String getAbsolutePath()>",
    "<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>",
    "<android.os.Bundle: java.lang.Object get(java.lang.String)>",
    "<android.database.Cursor: int getInt(int)>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.content.ComponentName: java.lang.String getPackageName()>",
    "<java.net.URLConnection: int getContentLength()>",
    "<android.os.Environment: java.io.File getDownloadCacheDirectory()>",
    "<android.webkit.WebView: android.webkit.WebSettings getSettings()>",
  )

  override val sinkList = List(
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>",
    "<android.webkit.WebSettings: void setSavePassword(boolean)>",
    "<android.app.NotificationManager: void notify(int,android.app.Notification)>",
    "<java.lang.String: boolean startsWith(java.lang.String)>",
    "<java.io.FileWriter: void write(java.lang.String)>",
    "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<android.webkit.WebSettings: void setSaveFormData(boolean)>",
    "<java.io.FileOutputStream: void write(byte[],int,int)>",
    "<android.app.ActivityManager: java.util.List getRunningTasks(int)>",
    "<java.lang.String: java.lang.String substring(int,int)>",
    "<android.util.Log: int i(java.lang.String,java.lang.String)>",
    "<android.content.Intent: android.content.Intent setFlags(int)>",
    "<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>",
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
    "<java.io.DataOutputStream: void write(byte[],int,int)>",
    "<java.io.DataOutputStream: void flush()>",
    "<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>",
    "<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>",
    "<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>",
    "<android.webkit.WebView: void setBackgroundColor(int)>",
    "<java.net.URL: void <init>",
    "<java.net.URL: java.net.URLConnection openConnection()>",
    "<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>",
    "<java.io.DataOutputStream: void writeBytes(java.lang.String)>",
    "<java.util.Calendar: void setTimeInMillis(long)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>",
    "<android.webkit.WebSettings: void setAllowFileAccess(boolean)>",
    "<java.io.FileOutputStream: void <init>",
    "<android.content.Context: void startActivity(android.content.Intent)>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.app.Activity: void onCreate(android.os.Bundle)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>",
    "<android.content.SharedPreferences$Editor: boolean commit()>",
    "<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>",
    "<android.util.Log: int e(java.lang.String,java.lang.String)>",
    "<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>",
    "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
    "<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>",
  )
}