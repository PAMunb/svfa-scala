package br.unb.cic.android.specs

import br.unb.cic.android.TaintBenchSpec

trait XbotAndroidSampSpec extends TaintBenchSpec {
//  URL https://github.com/TaintBench/xbot_android_samp/blob/master/README.md
  override val sourceList = List(
    "<java.lang.Class: java.lang.reflect.Field[] getFields()>",
    "<java.io.ByteArrayOutputStream: byte[] toByteArray()>",
    "<java.security.PrivilegedActionException: java.lang.Throwable getCause()>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>",
    "<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>",
    "<java.util.LinkedList: java.lang.Object getFirst()>",
    "<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>",
    "<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus()>",
    "<java.lang.reflect.Array: int getLength(java.lang.Object)>",
    "<java.util.BitSet: boolean get(int)>",
    "<java.lang.StackTraceElement: java.lang.String getClassName()>",
    "<java.util.Calendar: java.util.TimeZone getTimeZone()>",
    "<java.nio.charset.CharsetDecoder: java.nio.CharBuffer decode(java.nio.ByteBuffer)>",
    "<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>",
    "<java.util.Calendar: int getFirstDayOfWeek()>",
    "<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>",
    "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>",
    "<android.webkit.WebView: void loadUrl(java.lang.String)>",
    "<java.net.InetAddress: java.lang.String getHostAddress()>",
    "<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>",
    "<java.io.File: java.lang.String getName()>",
    "<org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>",
    "<java.lang.String: byte[] getBytes()>",
    "<java.lang.Thread: long getId()>",
    "<javax.net.ssl.SSLEngineResult: javax.net.ssl.SSLEngineResult$Status getStatus()>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>",
    "<java.net.DatagramPacket: java.net.InetAddress getAddress()>",
    "<java.net.URLConnection: java.util.Map getHeaderFields()>",
    "<java.net.URISyntaxException: java.lang.String getMessage()>",
    "<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>",
    "<java.io.File: java.lang.String getParent()>",
    "<java.io.BufferedReader: java.lang.String readLine()>",
    "<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>",
    "<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>",
    "<java.lang.reflect.Constructor: int getModifiers()>",
    "<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
    "<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>",
    "<java.util.GregorianCalendar: java.util.Date getGregorianChange()>",
    "<java.lang.Throwable: java.lang.String getMessage()>",
    "<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>",
    "<java.math.BigInteger: byte[] toByteArray()>",
    "<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>",
    "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>",
    "<java.util.HashMap: java.lang.Object get(java.lang.Object)>",
    "<java.lang.Throwable: java.lang.Throwable getCause()>",
    "<java.io.DataInputStream: int read(byte[])>",
    "<java.lang.StackTraceElement: java.lang.String getMethodName()>",
    "<android.os.Bundle: java.lang.Object get(java.lang.String)>",
    "<java.net.URI: java.lang.String getScheme()>",
    "<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>",
    "<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>",
    "<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>",
    "<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>",
    "<java.util.Calendar: int getMinimalDaysInFirstWeek()>",
    "<java.util.Date: long getTime()>",
    "<java.util.EnumMap: java.lang.Object get(java.lang.Object)>",
    "<java.nio.channels.SelectionKey: boolean isReadable()>",
    "<java.text.DateFormat: java.lang.String format(java.util.Date)>",
    "<android.content.ComponentName: java.lang.String getClassName()>",
    "<java.util.TimeZone: java.lang.String getID()>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
    "<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>",
    "<java.lang.Class: java.lang.ClassLoader getClassLoader()>",
    "<java.util.Currency: java.util.Currency getInstance(java.lang.String)>",
    "<java.lang.Number: byte byteValue()>",
    "<java.lang.ClassLoader: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)>",
    "<java.lang.ref.SoftReference: java.lang.Object get()>",
    "<java.lang.String: void getChars(int,int,char[],int)>",
    "<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>",
    "<java.lang.Byte: byte parseByte(java.lang.String)>",
    "<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<android.database.Cursor: java.lang.String getString(int)>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
    "<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>",
    "<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>",
    "<java.io.ObjectStreamClass: java.lang.String getName()>",
    "<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>",
    "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String,boolean)>",
    "<java.io.ObjectInputStream: java.lang.Object readObject()>",
    "<java.util.Calendar: int get(int)>",
    "<java.lang.System: java.lang.String getProperty(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>",
    "<java.lang.Enum: java.lang.String name()>",
    "<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>",
    "<android.os.Environment: java.io.File getExternalStorageDirectory()>",
    "<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>",
    "<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
    "<java.net.URI: java.lang.String getPath()>",
    "<java.lang.Class: java.lang.Class getEnclosingClass()>",
    "<java.nio.channels.SelectionKey: java.lang.Object attachment()>",
    "<java.net.Socket: java.io.OutputStream getOutputStream()>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>",
    "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
    "<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>",
    "<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>",
    "<java.lang.reflect.Method: java.lang.String getName()>",
    "<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>",
    "<android.content.Intent: int getIntExtra(java.lang.String,int)>",
    "<java.io.File: java.lang.String getAbsolutePath()>",
    "<java.net.URI: java.lang.String getQuery()>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<java.net.URLConnection: int getContentLength()>",
    "<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>",
    "<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>",
    "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>",
    "<java.lang.StackTraceElement: java.lang.String getFileName()>",
    "<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>",
    "<java.util.concurrent.atomic.AtomicInteger: int get()>",
    "<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>",
    "<java.net.URLConnection: long getHeaderFieldDate(java.lang.String,long)>",
    "<java.lang.reflect.Field: int getModifiers()>",
    "<android.app.ActivityManager: java.util.List getRunningTasks(int)>",
    "<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>",
    "<org.apache.http.message.BasicNameValuePair: java.lang.String getValue()>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>",
    "<java.nio.CharBuffer: java.lang.String toString()>",
    "<java.util.Calendar: long getTimeInMillis()>",
    "<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>",
    "<java.lang.reflect.Method: int getModifiers()>",
    "<java.util.Locale: java.util.Locale getDefault()>",
    "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
    "<java.net.URI: java.lang.String getHost()>",
    "<java.lang.Class: java.lang.Object[] getEnumConstants()>",
    "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>",
    "<java.lang.ThreadLocal: java.lang.Object get()>",
    "<java.net.URL: java.io.InputStream openStream()>",
    "<java.net.InetSocketAddress: int getPort()>",
    "<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>",
    "<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>",
    "<java.text.Collator: java.text.Collator getInstance(java.util.Locale)>",
    "<java.io.ObjectStreamClass: long getSerialVersionUID()>",
    "<java.util.LinkedList: java.lang.Object getLast()>",
    "<java.lang.StackTraceElement: int getLineNumber()>",
    "<java.lang.Runtime: java.lang.Runtime getRuntime()>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<java.lang.Number: short shortValue()>",
    "<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>",
    "<java.net.InetAddress: java.net.InetAddress getByAddress(byte[])>",
    "<android.telephony.SmsMessage: java.lang.String getOriginatingAddress()>",
    "<java.net.URLConnection: java.lang.String getContentType()>",
    "<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>",
    "<java.net.HttpURLConnection: int getResponseCode()>",
    "<android.telephony.SmsMessage: java.lang.String getMessageBody()>",
    "<java.net.Socket: java.io.InputStream getInputStream()>",
    "<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>",
    "<java.net.URI: int getPort()>",
    "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
    "<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>",
    "<java.net.URLConnection: int getHeaderFieldInt(java.lang.String,int)>",
    "<java.util.Calendar: java.lang.Object clone()>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>",
    "<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>",
    "<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>",
    "<org.xml.sax.SAXException: java.lang.String getMessage()>",
    "<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>",
    "<java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>",
    "<java.lang.reflect.Field: java.lang.String getName()>",
    "<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<java.lang.Class: int getModifiers()>",
    "<java.util.concurrent.atomic.AtomicBoolean: boolean get()>",
    "<java.lang.String: void getBytes(int,int,byte[],int)>",
    "<android.webkit.WebView: android.webkit.WebSettings getSettings()>",
    "<java.lang.Class: java.net.URL getResource(java.lang.String)>",
    "<java.net.URLConnection: long getDate()>",
    "<java.lang.Short: short parseShort(java.lang.String)>",
    "<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
    "<java.lang.System: java.lang.SecurityManager getSecurityManager()>",
    "<android.os.HandlerThread: android.os.Looper getLooper()>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<java.util.TimeZone: java.util.TimeZone getDefault()>",
    "<java.lang.Class: java.lang.String getSimpleName()>",
    "<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>",
    "<java.lang.Boolean: boolean parseBoolean(java.lang.String)>",
    "<java.net.URLConnection: long getLastModified()>",
    "<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>",
    "<java.security.MessageDigest: byte[] digest(byte[])>",
    "<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>",
    "<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>",
    "<java.io.FileInputStream: void <init>",
    "<java.util.ArrayList: java.lang.Object get(int)>",
    "<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>",
    "<java.lang.Character: int getType(char)>",
    "<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>",
    "<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>",
    "<java.lang.reflect.Method: java.lang.Class getReturnType()>",
    "<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>",
    "<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
    "<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>",
    "<android.content.Intent: android.os.Bundle getExtras()>",
    "<org.xml.sax.SAXParseException: int getLineNumber()>",
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<java.lang.reflect.Field: java.lang.Class getType()>",
    "<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>",
    "<java.net.ServerSocket: int getLocalPort()>",
    "<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>",
    "<java.lang.String: byte[] getBytes(java.lang.String)>",
    "<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>",
    "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>",
    "<javax.net.ssl.SSLEngine: javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)>",
    "<java.lang.Class: java.lang.String getName()>",
    "<org.apache.http.HttpEntity: java.io.InputStream getContent()>",
    "<java.lang.Character: int getType(int)>",
    "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>",
    "<java.net.InetAddress: byte[] getAddress()>",
    "<java.io.File: void <init>",
    "<org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>",
    "<java.lang.Class: java.lang.reflect.Method[] getMethods()>",
    "<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>",
    "<java.util.Currency: java.lang.String getCurrencyCode()>",
    "<java.text.DateFormat: java.util.Date parse(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>",
    "<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>",
  )

  override val sinkList = List(
    "<android.app.ActivityManager: java.util.List getRunningTasks(int)>",
    "<java.lang.String: java.lang.String substring(int,int)>",
    "<java.lang.ThreadLocal: void set(java.lang.Object)>",
    "<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<java.net.URLConnection: void setIfModifiedSince(long)>",
    "<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>",
    "<java.io.OutputStream: void write(byte[],int,int)>",
    "<java.io.PrintStream: void print(java.lang.String)>",
    "<java.net.URL: java.net.URLConnection openConnection()>",
    "<java.util.BitSet: void set(int)>",
    "<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>",
    "<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>",
    "<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>",
    "<java.lang.Math: double log(double)>",
    "<android.app.Activity: void onCreate(android.os.Bundle)>",
    "<java.net.Socket: void setSoTimeout(int)>",
    "<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
    "<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<java.util.GregorianCalendar: void setGregorianChange(java.util.Date)>",
    "<java.net.DatagramSocket: void setSoTimeout(int)>",
    "<android.util.Log: int d(java.lang.String,java.lang.String)>",
    "<java.util.Calendar: void setLenient(boolean)>",
    "<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>",
    "<java.lang.StringBuilder: void setCharAt(int,char)>",
    "<java.io.PrintWriter: void print(java.lang.String)>",
    "<java.io.ObjectOutputStream: void writeByte(int)>",
    "<java.text.Collator: void setDecomposition(int)>",
    "<java.io.ObjectOutputStream: void writeInt(int)>",
    "<java.util.Calendar: void setTimeInMillis(long)>",
    "<java.util.zip.GZIPOutputStream: void write(byte[],int,int)>",
    "<java.io.DataOutputStream: void writeUTF(java.lang.String)>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<java.util.Calendar: void setMinimalDaysInFirstWeek(int)>",
    "<android.content.SharedPreferences$Editor: boolean commit()>",
    "<java.util.EnumMap: java.lang.Object put(java.lang.Enum,java.lang.Object)>",
    "<android.webkit.WebSettings: void setUseWideViewPort(boolean)>",
    "<java.lang.Short: short parseShort(java.lang.String)>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setData(android.net.Uri)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<java.io.OutputStreamWriter: void <init>",
    "<java.lang.Boolean: boolean parseBoolean(java.lang.String)>",
    "<android.util.Log: int w(java.lang.String,java.lang.String)>",
    "<java.net.DatagramSocket: void bind(java.net.SocketAddress)>",
    "<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>",
    "<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>",
    "<java.util.HashSet: boolean add(java.lang.Object)>",
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
    "<java.io.ObjectOutputStream: void writeShort(int)>",
    "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
    "<java.lang.String: java.lang.String replace(char,char)>",
    "<java.net.Socket: void setTcpNoDelay(boolean)>",
    "<java.lang.Byte: byte parseByte(java.lang.String)>",
    "<java.io.Writer: java.io.Writer append(char)>",
    "<java.net.URL: void <init>",
    "<java.io.OutputStream: void write(byte[])>",
    "<java.io.ObjectOutputStream: void writeBoolean(boolean)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>",
    "<java.io.DataOutputStream: void writeByte(int)>",
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>",
    "<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>",
    "<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>",
    "<java.io.Writer: void write(java.lang.String)>",
    "<java.util.Calendar: void setFirstDayOfWeek(int)>",
    "<java.text.Collator: void setStrength(int)>",
    "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
    "<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>",
    "<java.lang.Thread: void setName(java.lang.String)>",
    "<java.net.DatagramSocket: void send(java.net.DatagramPacket)>",
    "<java.lang.String: boolean startsWith(java.lang.String)>",
    "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
    "<java.net.Socket: void setKeepAlive(boolean)>",
    "<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>",
    "<java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>",
    "<java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>",
    "<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>",
    "<java.io.PrintWriter: void println(java.lang.String)>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
    "<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>",
    "<java.lang.StringBuilder: void setLength(int)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>",
    "<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>",
    "<java.io.FileOutputStream: void <init>",
    "<java.io.FileOutputStream: void write(byte[])>",
    "<java.net.ServerSocket: void bind(java.net.SocketAddress)>",
    "<android.webkit.WebSettings: void setAllowFileAccess(boolean)>",
    "<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>",
    "<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>",
    "<java.net.ServerSocket: void setReceiveBufferSize(int)>",
    "<java.text.DateFormat: java.util.Date parse(java.lang.String)>",
    "<android.app.Activity: void setTitle(java.lang.CharSequence)>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>",
    "<java.lang.Thread: void setDaemon(boolean)>",
    "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
  )
}