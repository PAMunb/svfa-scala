package br.unb.cic.android.specs

import br.unb.cic.android.TaintBenchSpec

trait CajinoBaiduSpec extends TaintBenchSpec {

  override val sourceList = List(
    "<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>",
    "<java.io.ByteArrayOutputStream: byte[] toByteArray()>",
    "<java.lang.ThreadGroup: int getMaxPriority()>",
    "<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>",
    "<java.net.URL: java.lang.String getHost()>",
    "<java.lang.reflect.Array: int getLength(java.lang.Object)>",
    "<java.lang.StackTraceElement: java.lang.String getClassName()>",
    "<java.util.Properties: void load(java.io.InputStream)>",
    "<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>",
    "<java.util.Calendar: int getFirstDayOfWeek()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()>",
    "<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>",
    "<java.net.Socket: int getSendBufferSize()>",
    "<java.net.URI: java.lang.String getRawFragment()>",
    "<java.net.InetAddress: java.lang.String getHostAddress()>",
    "<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>",
    "<java.io.File: java.lang.String getName()>",
    "<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getExpiry()>",
    "<org.apache.commons.codec.binary.Base64: byte[] discardWhitespace(byte[])>",
    "<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>",
    "<java.net.URL: java.lang.String getFile()>",
    "<java.util.Calendar: java.util.Calendar getInstance()>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>",
    "<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>",
    "<android.telephony.gsm.GsmCellLocation: int getCid()>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>",
    "<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>",
    "<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>",
    "<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>",
    "<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory()>",
    "<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>",
    "<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>",
    "<java.net.URI: java.lang.String getRawQuery()>",
    "<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()>",
    "<java.lang.Thread: int getPriority()>",
    "<java.io.ObjectInputStream: java.lang.String readUTF()>",
    "<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>",
    "<android.content.Intent: java.lang.String getAction()>",
    "<java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>",
    "<android.provider.Settings$System: long getLong(android.content.ContentResolver,java.lang.String)>",
    "<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>",
    "<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>",
    "<org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>",
    "<java.lang.Class: java.lang.Package getPackage()>",
    "<java.util.HashMap: java.lang.Object get(java.lang.Object)>",
    "<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()>",
    "<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<java.lang.StringBuffer: void getChars(int,int,char[],int)>",
    "<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>",
    "<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>",
    "<android.database.Cursor: int getInt(int)>",
    "<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>",
    "<java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>",
    "<org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>",
    "<java.util.EventObject: java.lang.Object getSource()>",
    "<java.util.logging.LogRecord: java.lang.String getLoggerName()>",
    "<org.apache.http.impl.io.ContentLengthInputStream: int read(byte[],int,int)>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<java.net.InetAddress: java.net.InetAddress getLocalHost()>",
    "<org.apache.http.conn.routing.HttpRoute: int getHopCount()>",
    "<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>",
    "<java.util.logging.LogRecord: long getMillis()>",
    "<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>",
    "<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>",
    "<java.text.DateFormat: java.lang.String format(java.util.Date)>",
    "<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>",
    "<android.content.ComponentName: java.lang.String getClassName()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectStrategy getRedirectStrategy()>",
    "<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
    "<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>",
    "<org.apache.http.cookie.CookieOrigin: int getPort()>",
    "<java.util.logging.LogRecord: java.util.logging.Level getLevel()>",
    "<java.lang.ref.SoftReference: java.lang.Object get()>",
    "<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>",
    "<java.lang.String: void getChars(int,int,char[],int)>",
    "<java.text.DateFormat: java.lang.Object clone()>",
    "<android.database.Cursor: java.lang.String getString(int)>",
    "<org.apache.commons.codec.binary.Base64: byte[] discardNonBase64(byte[])>",
    "<android.app.Activity: android.content.Intent getIntent()>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>",
    "<org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>",
    "<java.security.KeyPair: java.security.PrivateKey getPrivate()>",
    "<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>",
    "<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>",
    "<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>",
    "<java.io.ObjectInputStream: java.lang.Object readObject()>",
    "<java.util.Calendar: int get(int)>",
    "<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>",
    "<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.HttpRequestFactory createHttpRequestFactory()>",
    "<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>",
    "<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>",
    "<java.net.URI: java.lang.String getPath()>",
    "<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>",
    "<java.net.Socket: java.io.OutputStream getOutputStream()>",
    "<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>",
    "<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>",
    "<java.lang.reflect.Method: java.lang.String getName()>",
    "<java.io.File: java.io.File[] listFiles()>",
    "<java.io.LineNumberReader: java.lang.String readLine()>",
    "<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>",
    "<java.io.DataInputStream: java.lang.String readUTF()>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool()>",
    "<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>",
    "<android.content.Intent: int getIntExtra(java.lang.String,int)>",
    "<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)>",
    "<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>",
    "<org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>",
    "<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>",
    "<java.net.URI: java.lang.String getQuery()>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>",
    "<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>",
    "<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>",
    "<java.net.Socket: int getReceiveBufferSize()>",
    "<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>",
    "<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>",
    "<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>",
    "<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>",
    "<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>",
    "<java.io.DataInputStream: int read(byte[],int,int)>",
    "<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>",
    "<java.lang.reflect.Field: int getModifiers()>",
    "<java.net.URL: java.lang.String getPath()>",
    "<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>",
    "<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>",
    "<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>",
    "<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>",
    "<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>",
    "<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>",
    "<javax.crypto.Mac: byte[] doFinal(byte[])>",
    "<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>",
    "<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>",
    "<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>",
    "<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>",
    "<java.util.Locale: java.util.Locale getDefault()>",
    "<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>",
    "<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>",
    "<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)>",
    "<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>",
    "<java.net.URI: java.lang.String getHost()>",
    "<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>",
    "<android.telephony.TelephonyManager: java.lang.String getLine1Number()>",
    "<java.lang.ThreadLocal: java.lang.Object get()>",
    "<java.net.URL: java.io.InputStream openStream()>",
    "<org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)>",
    "<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>",
    "<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>",
    "<java.net.InetSocketAddress: int getPort()>",
    "<android.location.Location: double getAltitude()>",
    "<android.content.Intent: android.net.Uri getData()>",
    "<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>",
    "<java.sql.DriverManager: java.util.Enumeration getDrivers()>",
    "<java.lang.System: java.util.Properties getProperties()>",
    "<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>",
    "<org.apache.http.impl.conn.AbstractPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>",
    "<java.lang.StackTraceElement: int getLineNumber()>",
    "<java.util.LinkedList: java.lang.Object getLast()>",
    "<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<java.lang.Number: short shortValue()>",
    "<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict()>",
    "<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>",
    "<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>",
    "<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>",
    "<java.util.Calendar: java.util.Date getTime()>",
    "<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>",
    "<java.net.Socket: java.io.InputStream getInputStream()>",
    "<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>",
    "<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>",
    "<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>",
    "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>",
    "<android.os.Bundle: boolean getBoolean(java.lang.String)>",
    "<org.xml.sax.SAXException: java.lang.String getMessage()>",
    "<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>",
    "<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>",
    "<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<org.apache.http.auth.NTUserPrincipal: java.lang.String getDomain()>",
    "<java.util.AbstractSequentialList: java.util.Iterator iterator()>",
    "<android.content.ComponentName: java.lang.String getPackageName()>",
    "<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>",
    "<java.util.LinkedList: java.lang.Object get(int)>",
    "<java.lang.Class: java.net.URL getResource(java.lang.String)>",
    "<android.net.Proxy: java.lang.String getDefaultHost()>",
    "<java.lang.Short: short parseShort(java.lang.String)>",
    "<org.json.JSONObject: int getInt(java.lang.String)>",
    "<android.location.Location: double getLatitude()>",
    "<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>",
    "<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>",
    "<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>",
    "<java.security.MessageDigest: byte[] digest(byte[])>",
    "<java.io.FileInputStream: void <init>",
    "<java.util.ArrayList: java.lang.Object get(int)>",
    "<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>",
    "<org.apache.http.conn.params.ConnPerRouteBean: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>",
    "<org.apache.http.auth.NTUserPrincipal: java.lang.String getUsername()>",
    "<java.net.URL: java.lang.String getProtocol()>",
    "<java.lang.Throwable: java.lang.String getLocalizedMessage()>",
    "<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()>",
    "<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>",
    "<java.util.logging.Level: java.lang.String getLocalizedName()>",
    "<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>",
    "<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>",
    "<org.apache.http.impl.client.RequestWrapper: int getExecCount()>",
    "<org.xml.sax.SAXParseException: int getLineNumber()>",
    "<org.apache.http.HttpHost: int getPort()>",
    "<javax.xml.parsers.FactoryConfigurationError: java.lang.Exception getException()>",
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>",
    "<java.util.Hashtable: java.lang.Object get(java.lang.Object)>",
    "<java.lang.reflect.Field: java.lang.Class getType()>",
    "<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>",
    "<org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>",
    "<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>",
    "<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>",
    "<java.lang.String: byte[] getBytes(java.lang.String)>",
    "<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>",
    "<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>",
    "<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String)>",
    "<android.net.NetworkInfo: int getSubtype()>",
    "<java.util.Properties: java.lang.String getProperty(java.lang.String)>",
    "<java.lang.Class: java.lang.String getName()>",
    "<java.net.URI: java.lang.String getFragment()>",
    "<java.security.KeyPair: java.security.PublicKey getPublic()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>",
    "<org.apache.http.HttpEntity: java.io.InputStream getContent()>",
    "<android.database.Cursor: long getLong(int)>",
    "<android.net.wifi.WifiManager: java.util.List getScanResults()>",
    "<java.io.File: boolean delete()>",
    "<org.apache.http.impl.cookie.RFC2965Spec: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>",
    "<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>",
    "<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>",
    "<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>",
    "<org.apache.http.HttpHost: java.lang.String getSchemeName()>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.io.File: void <init>",
    "<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>",
    "<java.io.StringWriter: java.lang.StringBuffer getBuffer()>",
    "<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>",
    "<java.net.InetSocketAddress: java.net.InetAddress getAddress()>",
    "<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>",
    "<java.text.DateFormat: java.text.NumberFormat getNumberFormat()>",
    "<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>",
    "<android.telephony.TelephonyManager: int getNetworkType()>",
    "<java.sql.DriverManager: java.sql.Connection getConnection(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>",
    "<android.app.PendingIntent: java.lang.String getTargetPackage()>",
    "<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()>",
    "<java.lang.Class: java.lang.reflect.Field[] getFields()>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>",
    "<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>",
    "<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>",
    "<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>",
    "<java.util.BitSet: boolean get(int)>",
    "<java.net.InetAddress: java.lang.String getHostName()>",
    "<java.util.logging.LogRecord: java.lang.Throwable getThrown()>",
    "<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>",
    "<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>",
    "<android.telephony.gsm.GsmCellLocation: int getLac()>",
    "<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>",
    "<android.telephony.cdma.CdmaCellLocation: int getSystemId()>",
    "<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>",
    "<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>",
    "<android.webkit.WebView: void loadUrl(java.lang.String)>",
    "<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>",
    "<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>",
    "<java.lang.String: byte[] getBytes()>",
    "<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>",
    "<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>",
    "<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>",
    "<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>",
    "<org.apache.http.auth.AuthScope: java.lang.String getRealm()>",
    "<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>",
    "<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.RFC2965Spec getStrict()>",
    "<java.net.URISyntaxException: java.lang.String getMessage()>",
    "<java.net.Socket: java.net.InetAddress getInetAddress()>",
    "<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>",
    "<java.io.File: java.lang.String getParent()>",
    "<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>",
    "<java.io.BufferedReader: java.lang.String readLine()>",
    "<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>",
    "<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>",
    "<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>",
    "<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>",
    "<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>",
    "<android.net.NetworkInfo: java.lang.String getExtraInfo()>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>",
    "<java.lang.Throwable: java.lang.String getMessage()>",
    "<org.apache.http.message.ParserCursor: int getPos()>",
    "<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>",
    "<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>",
    "<org.apache.http.impl.io.ChunkedInputStream: int getChunkSize()>",
    "<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>",
    "<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>",
    "<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>",
    "<org.apache.http.conn.params.ConnPerRouteBean: int getDefaultMaxPerRoute()>",
    "<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>",
    "<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>",
    "<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>",
    "<java.lang.StackTraceElement: java.lang.String getMethodName()>",
    "<java.util.AbstractList: java.util.Iterator iterator()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>",
    "<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>",
    "<java.lang.ThreadGroup: java.lang.String getName()>",
    "<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>",
    "<android.app.Dialog: android.view.Window getWindow()>",
    "<java.net.URI: java.lang.String getScheme()>",
    "<org.xml.sax.SAXException: java.lang.Exception getException()>",
    "<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>",
    "<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>",
    "<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>",
    "<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>",
    "<org.apache.http.impl.io.ChunkedInputStream: int read(byte[],int,int)>",
    "<org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>",
    "<java.util.Date: long getTime()>",
    "<java.lang.Integer: java.lang.Integer decode(java.lang.String)>",
    "<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<android.telephony.TelephonyManager: int getPhoneType()>",
    "<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>",
    "<javax.crypto.spec.SecretKeySpec: java.lang.String getAlgorithm()>",
    "<java.lang.Class: java.lang.ClassLoader getClassLoader()>",
    "<java.lang.Number: byte byteValue()>",
    "<org.json.JSONObject: java.lang.String getString(java.lang.String)>",
    "<java.text.Format: java.lang.String format(java.lang.Object)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>",
    "<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>",
    "<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>",
    "<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>",
    "<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>",
    "<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>",
    "<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>",
    "<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>",
    "<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>",
    "<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>",
    "<java.net.URI: java.lang.String getAuthority()>",
    "<java.lang.System: java.lang.String getProperty(java.lang.String)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser)>",
    "<javax.crypto.Cipher: byte[] doFinal(byte[])>",
    "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>",
    "<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>",
    "<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>",
    "<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>",
    "<java.lang.Enum: java.lang.String name()>",
    "<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>",
    "<android.os.Environment: java.io.File getExternalStorageDirectory()>",
    "<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>",
    "<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<org.apache.http.impl.conn.tsccm.BasicPoolEntry: long getUpdated()>",
    "<java.security.KeyStore: void load(java.io.InputStream,char[])>",
    "<org.apache.http.message.BasicHeaderElementIterator: void parseNextElement()>",
    "<org.apache.http.util.VersionInfo: java.lang.String getRelease()>",
    "<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>",
    "<org.apache.http.impl.io.AbstractSessionInputBuffer: int read(byte[],int,int)>",
    "<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>",
    "<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>",
    "<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>",
    "<java.net.URI: java.lang.String getRawPath()>",
    "<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>",
    "<java.io.File: java.lang.String getAbsolutePath()>",
    "<org.apache.http.HttpHost: java.lang.String getHostName()>",
    "<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>",
    "<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>",
    "<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>",
    "<java.util.zip.ZipEntry: java.lang.String getName()>",
    "<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>",
    "<org.apache.http.ProtocolVersion: int getMinor()>",
    "<android.location.Location: double getLongitude()>",
    "<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>",
    "<org.apache.http.impl.io.ChunkedInputStream: void parseTrailerHeaders()>",
    "<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>",
    "<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>",
    "<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)>",
    "<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>",
    "<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>",
    "<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>",
    "<java.lang.Long: java.lang.Long decode(java.lang.String)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<java.net.Socket: int getPort()>",
    "<java.security.KeyStore: java.lang.String getDefaultType()>",
    "<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()>",
    "<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>",
    "<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.lang.reflect.Method: int getModifiers()>",
    "<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>",
    "<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>",
    "<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>",
    "<java.security.CodeSource: java.net.URL getLocation()>",
    "<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>",
    "<android.view.Display: void getMetrics(android.util.DisplayMetrics)>",
    "<java.net.Socket: int getSoTimeout()>",
    "<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>",
    "<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>",
    "<org.xml.sax.InputSource: java.lang.String getSystemId()>",
    "<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>",
    "<java.lang.ref.Reference: java.lang.Object get()>",
    "<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>",
    "<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>",
    "<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()>",
    "<org.apache.http.util.ExceptionUtils: java.lang.reflect.Method getInitCauseMethod()>",
    "<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>",
    "<android.content.res.Resources: java.lang.String getString(int)>",
    "<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>",
    "<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>",
    "<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>",
    "<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>",
    "<java.net.URI: int getPort()>",
    "<java.net.URL: int getPort()>",
    "<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>",
    "<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
    "<android.os.Environment: java.lang.String getExternalStorageState()>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>",
    "<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>",
    "<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.http.auth.AuthScope: java.lang.String getScheme()>",
    "<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>",
    "<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>",
    "<org.apache.http.ProtocolVersion: int getMajor()>",
    "<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>",
    "<org.json.JSONArray: int getInt(int)>",
    "<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>",
    "<java.lang.reflect.Field: java.lang.String getName()>",
    "<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>",
    "<java.lang.Package: java.lang.String getImplementationVersion()>",
    "<java.util.Vector: java.lang.Object get(int)>",
    "<java.io.File: java.io.File getParentFile()>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>",
    "<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>",
    "<android.webkit.WebView: android.webkit.WebSettings getSettings()>",
    "<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getMaxTotalConnections()>",
    "<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>",
    "<java.net.InetSocketAddress: java.lang.String getHostName()>",
    "<java.util.TimeZone: java.util.TimeZone getDefault()>",
    "<java.lang.Class: java.lang.String getSimpleName()>",
    "<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<android.net.Proxy: int getDefaultPort()>",
    "<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>",
    "<java.net.Socket: java.net.InetAddress getLocalAddress()>",
    "<android.app.AlertDialog$Builder: android.app.AlertDialog show()>",
    "<java.util.logging.LogRecord: java.lang.String getSourceClassName()>",
    "<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>",
    "<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>",
    "<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>",
    "<java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>",
    "<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>",
    "<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>",
    "<android.os.Bundle: java.lang.String getString(java.lang.String)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpProcessor getProtocolProcessor()>",
    "<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>",
    "<java.lang.reflect.Method: java.lang.Class getReturnType()>",
    "<android.content.Intent: int getFlags()>",
    "<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
    "<android.content.Intent: android.os.Bundle getExtras()>",
    "<java.security.MessageDigest: byte[] digest()>",
    "<org.apache.http.auth.AuthScope: java.lang.String getHost()>",
    "<java.net.ProxySelector: java.net.ProxySelector getDefault()>",
    "<java.lang.Thread: java.lang.String getName()>",
    "<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>",
    "<org.apache.http.auth.AuthScope: int getPort()>",
    "<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>",
    "<org.apache.http.message.ParserCursor: int getUpperBound()>",
    "<android.net.wifi.WifiInfo: java.lang.String getBSSID()>",
    "<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>",
    "<org.apache.http.impl.cookie.BestMatchSpec: org.apache.http.impl.cookie.BrowserCompatSpec getCompat()>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<org.apache.http.message.BasicLineParser: org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>",
    "<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>",
    "<org.xml.sax.SAXParseException: int getColumnNumber()>",
    "<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>",
    "<org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>",
    "<java.net.Socket: int getLocalPort()>",
    "<java.lang.ClassLoader: java.lang.ClassLoader getParent()>",
    "<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()>",
    "<org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>",
    "<org.apache.http.conn.routing.RouteTracker: int getHopCount()>",
    "<org.apache.http.params.HttpConnectionParams: int getSocketBufferSize(org.apache.http.params.HttpParams)>",
    "<android.net.NetworkInfo: java.lang.String getTypeName()>",
    "<java.text.DateFormat: java.util.Date parse(java.lang.String)>",
    "<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>",
    "<org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>",
    "<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>",
  )

  override val sinkList = List(
    "<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>",
    "<android.content.Intent: android.content.Intent setPackage(java.lang.String)>",
    "<android.location.Criteria: void setBearingRequired(boolean)>",
    "<org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>",
    "<android.widget.RemoteViews: void setImageViewResource(int,int)>",
    "<android.content.Intent: android.content.Intent setType(java.lang.String)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.String)>",
    "<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>",
    "<java.io.OutputStream: void write(byte[],int,int)>",
    "<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>",
    "<java.io.PrintStream: void print(java.lang.String)>",
    "<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>",
    "<java.io.BufferedOutputStream: void write(byte[],int,int)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.net.Socket: void setSoLinger(boolean,int)>",
    "<java.util.Calendar: void setTimeZone(java.util.TimeZone)>",
    "<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>",
    "<org.apache.http.auth.params.AuthParams: void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String)>",
    "<java.io.RandomAccessFile: void write(byte[],int,int)>",
    "<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>",
    "<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List)>",
    "<java.net.Socket: void setReuseAddress(boolean)>",
    "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>",
    "<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void updateExpiry(long,java.util.concurrent.TimeUnit)>",
    "<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>",
    "<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
    "<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>",
    "<org.apache.http.impl.io.ChunkedOutputStream: void flushCacheWithAppend(byte[],int,int)>",
    "<org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>",
    "<org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>",
    "<java.util.logging.LogRecord: void setSourceClassName(java.lang.String)>",
    "<org.apache.http.impl.cookie.DateUtils$DateFormatHolder: java.text.SimpleDateFormat formatFor(java.lang.String)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>",
    "<java.util.Vector: void setSize(int)>",
    "<java.util.Date: void setTime(long)>",
    "<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>",
    "<org.apache.http.impl.io.ContentLengthOutputStream: void write(byte[],int,int)>",
    "<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>",
    "<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>",
    "<android.widget.TextView: void setText(java.lang.CharSequence)>",
    "<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>",
    "<java.util.Calendar: void setTime(java.util.Date)>",
    "<org.apache.http.entity.HttpEntityWrapper: void writeTo(java.io.OutputStream)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>",
    "<org.apache.http.impl.entity.EntitySerializer: void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity)>",
    "<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>",
    "<org.apache.http.conn.params.ConnPerRouteBean: void setDefaultMaxPerRoute(int)>",
    "<java.util.logging.LogRecord: void setSourceMethodName(java.lang.String)>",
    "<android.content.SharedPreferences$Editor: boolean commit()>",
    "<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>",
    "<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>",
    "<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>",
    "<java.lang.Float: float parseFloat(java.lang.String)>",
    "<java.lang.StringBuffer: void setLength(int)>",
    "<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>",
    "<java.io.BufferedWriter: void write(java.lang.String)>",
    "<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams)>",
    "<android.view.View: void setBackgroundColor(int)>",
    "<org.apache.http.message.HeaderGroup: void updateHeader(org.apache.http.Header)>",
    "<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.io.OutputStreamWriter: void <init>",
    "<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>",
    "<android.util.Log: int i(java.lang.String,java.lang.String)>",
    "<org.apache.http.entity.SerializableEntity: void createBytes(java.io.Serializable)>",
    "<java.util.HashSet: boolean add(java.lang.Object)>",
    "<org.apache.http.params.HttpProtocolParams: void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String)>",
    "<org.apache.http.entity.AbstractHttpEntity: void setContentType(org.apache.http.Header)>",
    "<android.location.Criteria: void setAccuracy(int)>",
    "<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>",
    "<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void setEntity(org.apache.http.HttpEntity)>",
    "<android.view.Window: void setType(int)>",
    "<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[])>",
    "<java.net.URL: void <init>",
    "<java.io.OutputStream: void write(byte[])>",
    "<java.io.ObjectOutputStream: void writeBoolean(boolean)>",
    "<org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])>",
    "<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>",
    "<java.io.PrintStream: void write(int)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>",
    "<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>",
    "<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>",
    "<android.location.Criteria: void setCostAllowed(boolean)>",
    "<org.apache.http.params.BasicHttpParams: void setParameters(java.lang.String[],java.lang.Object)>",
    "<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>",
    "<org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>",
    "<java.io.Writer: void write(java.lang.String)>",
    "<java.lang.Class: java.lang.Class forName(java.lang.String)>",
    "<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>",
    "<java.lang.Thread: void setName(java.lang.String)>",
    "<org.apache.http.impl.EnglishReasonPhraseCatalog: void setReason(int,java.lang.String)>",
    "<java.util.Calendar: void set(int,int,int,int,int,int)>",
    "<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory)>",
    "<java.net.DatagramSocket: void send(java.net.DatagramPacket)>",
    "<java.lang.String: boolean startsWith(java.lang.String)>",
    "<java.net.Socket: void bind(java.net.SocketAddress)>",
    "<java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>",
    "<org.apache.http.params.HttpConnectionParams: void setLinger(org.apache.http.params.HttpParams,int)>",
    "<org.apache.http.impl.AbstractHttpServerConnection: org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams)>",
    "<java.io.PrintWriter: void println(java.lang.String)>",
    "<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>",
    "<org.apache.http.conn.params.ConnManagerParams: void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>",
    "<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>",
    "<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>",
    "<org.apache.http.impl.conn.AbstractPoolEntry: void setState(java.lang.Object)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>",
    "<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>",
    "<org.apache.http.protocol.UriPatternMatcher: void setObjects(java.util.Map)>",
    "<android.location.Criteria: void setAltitudeRequired(boolean)>",
    "<java.io.FileOutputStream: void <init>",
    "<java.io.FileOutputStream: void write(byte[])>",
    "<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>",
    "<org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>",
    "<android.widget.LinearLayout: void setOrientation(int)>",
    "<java.util.zip.Inflater: void setInput(byte[])>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<org.apache.http.params.HttpConnectionParams: void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean)>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>",
    "<org.apache.http.util.ByteArrayBuffer: void setLength(int)>",
    "<java.util.logging.Logger: void setLevel(java.util.logging.Level)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>",
    "<java.io.FileWriter: void write(java.lang.String)>",
    "<org.apache.http.protocol.HttpService: void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy)>",
    "<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>",
    "<org.apache.http.impl.io.AbstractMessageParser: org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser)>",
    "<com.baidu.inf.iis.bcs.BaiduBCS: com.baidu.inf.iis.bcs.response.BaiduBCSResponse putObject(com.baidu.inf.iis.bcs.request.PutObjectRequest)>",
    "<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>",
    "<java.text.DateFormat: void setCalendar(java.util.Calendar)>",
    "<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>",
    "<java.lang.StringBuffer: void setCharAt(int,char)>",
    "<java.lang.String: java.lang.String substring(int,int)>",
    "<java.lang.ThreadLocal: void set(java.lang.Object)>",
    "<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void setMaxTotalConnections(int)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>",
    "<java.io.DataOutputStream: void write(byte[])>",
    "<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>",
    "<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>",
    "<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>",
    "<org.apache.http.message.ParserCursor: void updatePos(int)>",
    "<org.apache.http.conn.params.ConnManagerParams: void setMaxTotalConnections(org.apache.http.params.HttpParams,int)>",
    "<java.net.URL: java.net.URLConnection openConnection()>",
    "<java.util.BitSet: void set(int)>",
    "<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>",
    "<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>",
    "<org.apache.http.message.HeaderGroup: void setHeaders(org.apache.http.Header[])>",
    "<org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>",
    "<java.lang.Thread: void setPriority(int)>",
    "<org.apache.http.params.HttpConnectionParams: void setTcpNoDelay(org.apache.http.params.HttpParams,boolean)>",
    "<java.net.Socket: void setSoTimeout(int)>",
    "<android.app.Activity: void onCreate(android.os.Bundle)>",
    "<org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>",
    "<android.util.Log: int e(java.lang.String,java.lang.String)>",
    "<org.apache.http.entity.InputStreamEntity: void writeTo(java.io.OutputStream)>",
    "<java.util.TreeSet: boolean add(java.lang.Object)>",
    "<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>",
    "<org.apache.http.impl.cookie.NetscapeDraftHeaderParser: org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.lang.Double: double parseDouble(java.lang.String)>",
    "<java.io.ObjectOutputStream: void writeLong(long)>",
    "<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>",
    "<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>",
    "<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>",
    "<java.io.PrintStream: void write(byte[],int,int)>",
    "<android.util.Log: int d(java.lang.String,java.lang.String)>",
    "<android.content.Intent: android.content.Intent setFlags(int)>",
    "<java.io.DataOutputStream: void write(byte[],int,int)>",
    "<org.apache.http.params.BasicHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>",
    "<java.io.PrintWriter: void print(java.lang.String)>",
    "<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>",
    "<java.io.ObjectOutputStream: void writeInt(int)>",
    "<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>",
    "<android.util.Log: int v(java.lang.String,java.lang.String)>",
    "<java.io.DataOutputStream: void writeUTF(java.lang.String)>",
    "<android.location.Criteria: void setPowerRequirement(int)>",
    "<java.lang.Long: long parseLong(java.lang.String)>",
    "<org.apache.http.protocol.HttpService: void setHttpProcessor(org.apache.http.protocol.HttpProcessor)>",
    "<org.apache.http.impl.client.DefaultHttpClient: void setDefaultHttpParams(org.apache.http.params.HttpParams)>",
    "<org.apache.http.protocol.BasicHttpContext: void setAttribute(java.lang.String,java.lang.Object)>",
    "<java.lang.Short: short parseShort(java.lang.String)>",
    "<android.content.Intent: android.content.Intent setData(android.net.Uri)>",
    "<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<org.apache.http.entity.AbstractHttpEntity: void setContentEncoding(org.apache.http.Header)>",
    "<android.webkit.WebSettings: void setCacheMode(int)>",
    "<java.net.ServerSocket: void setSoTimeout(int)>",
    "<android.util.Log: int w(java.lang.String,java.lang.String)>",
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
    "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
    "<java.lang.String: java.lang.String replace(char,char)>",
    "<android.app.ActivityManager: java.util.List getRunningServices(int)>",
    "<java.net.Socket: void setTcpNoDelay(boolean)>",
    "<org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>",
    "<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>",
    "<org.apache.http.impl.io.AbstractSessionOutputBuffer: void write(byte[],int,int)>",
    "<android.content.Context: void startActivity(android.content.Intent)>",
    "<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>",
    "<android.util.Log: int w(java.lang.String,java.lang.Throwable)>",
    "<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>",
    "<java.net.URLConnection: java.io.InputStream getInputStream()>",
    "<org.apache.http.conn.params.ConnPerRouteBean: void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int)>",
    "<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>",
    "<android.app.NotificationManager: void notify(int,android.app.Notification)>",
    "<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>",
    "<android.content.Intent: android.content.Intent setAction(java.lang.String)>",
    "<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>",
    "<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>",
    "<org.apache.http.protocol.HttpService: void setResponseFactory(org.apache.http.HttpResponseFactory)>",
    "<android.widget.Toast: void setGravity(int,int,int)>",
    "<org.xml.sax.InputSource: void setSystemId(java.lang.String)>",
    "<android.widget.ListView: void setItemsCanFocus(boolean)>",
    "<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>",
    "<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<java.util.logging.Logger: void log(java.util.logging.LogRecord)>",
    "<java.io.File: boolean delete()>",
    "<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>",
    "<java.lang.StringBuilder: void setLength(int)>",
    "<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>",
    "<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>",
    "<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>",
    "<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>",
    "<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>",
    "<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>",
    "<android.webkit.WebSettings: void setAllowFileAccess(boolean)>",
    "<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>",
    "<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>",
    "<android.widget.ListView: void setDividerHeight(int)>",
    "<java.text.DateFormat: java.util.Date parse(java.lang.String)>",
    "<java.util.Calendar: void set(int,int)>",
    "<java.util.logging.LogRecord: void setThrown(java.lang.Throwable)>",
    "<java.lang.Thread: void setDaemon(boolean)>",
    "<android.widget.RelativeLayout: void setGravity(int)>",
    "<java.net.URLConnection: void setUseCaches(boolean)>",
    "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
  )
}