package br.unb.cic.android.specs

import br.unb.cic.android.TaintBenchSpec

trait PhospySpec extends TaintBenchSpec {
//  URL https://github.com/TaintBench/phospy/blob/master/README.md
  override val sourceList = List(
    "<java.lang.Thread: java.lang.String getName()>",
    "<java.io.ByteArrayOutputStream: byte[] toByteArray()>",
    "<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<java.nio.charset.Charset: java.lang.String name()>",
    "<java.lang.Class: java.lang.String getSimpleName()>",
    "<java.net.URL: java.lang.String getPath()>",
    "<java.net.URL: java.lang.String getAuthority()>",
    "<java.util.Properties: void load(java.io.InputStream)>",
    "<java.net.HttpURLConnection: int getResponseCode()>",
    "<android.view.View: java.lang.Object getTag()>",
    "<java.net.URL: java.lang.Object getContent()>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<android.telephony.TelephonyManager: java.lang.String getDeviceId()>",
    "<java.net.Socket: java.io.OutputStream getOutputStream()>",
    "<java.net.HttpURLConnection: java.lang.String getRequestMethod()>",
    "<java.io.FileInputStream: void <init>",
    "<java.nio.CharBuffer: java.lang.String toString()>",
    "<java.util.ArrayList: java.lang.Object get(int)>",
    "<android.widget.EditText: android.text.Editable getText()>",
    "<android.content.Context: java.lang.Object getSystemService(java.lang.String)>",
    "<java.io.File: java.io.File[] listFiles()>",
    "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>",
    "<android.widget.TextView: java.lang.CharSequence getText()>",
    "<java.io.File: java.lang.String getName()>",
    "<java.net.URL: java.lang.String getProtocol()>",
    "<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>",
    "<java.net.HttpURLConnection: java.lang.String getResponseMessage()>",
    "<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>",
    "<java.io.File: java.lang.String getAbsolutePath()>",
    "<java.io.File: void <init>",
    "<java.util.HashMap: java.lang.Object get(java.lang.Object)>",
    "<java.io.File: java.lang.String getPath()>",
    "<java.io.DataInputStream: int read(byte[])>",
    "<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<java.net.URL: java.lang.String getQuery()>",
    "<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>",
    "<android.net.NetworkInfo: java.lang.String getTypeName()>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>",
    "<java.util.LinkedList: java.lang.Object get(int)>",
    "<android.net.wifi.WifiManager: int getWifiState()>",
  )

  override val sinkList = List(
    "<java.lang.String: boolean startsWith(java.lang.String)>",
    "<android.net.Uri: android.net.Uri parse(java.lang.String)>",
    "<android.os.Handler: boolean sendMessage(android.os.Message)>",
    "<android.view.Window: void setFlags(int,int)>",
    "<java.lang.String: java.lang.String substring(int,int)>",
    "<android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)>",
    "<java.io.OutputStreamWriter: void <init>",
    "<android.os.Handler: boolean sendEmptyMessage(int)>",
    "<android.content.Intent: android.content.Intent setFlags(int)>",
    "<android.view.View: void setTag(java.lang.Object)>",
    "<java.lang.Integer: int parseInt(java.lang.String,int)>",
    "<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>",
    "<java.io.DataOutputStream: void flush()>",
    "<java.io.DataOutputStream: void write(byte[],int,int)>",
    "<android.content.Context: android.content.ComponentName startService(android.content.Intent)>",
    "<android.app.Activity: void startActivity(android.content.Intent)>",
    "<android.widget.ImageView: void setImageResource(int)>",
    "<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>",
    "<java.io.OutputStreamWriter: void write(java.lang.String)>",
    "<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>",
    "<java.net.HttpURLConnection: void connect()>",
    "<android.widget.TextView: void setText(java.lang.CharSequence)>",
    "<java.net.URL: void <init>",
    "<java.net.URL: java.net.URLConnection openConnection()>",
    "<java.io.DataOutputStream: void writeUTF(java.lang.String)>",
    "<java.net.HttpURLConnection: java.io.InputStream getInputStream()>",
    "<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>",
    "<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>",
    "<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>",
    "<java.lang.Integer: int parseInt(java.lang.String)>",
    "<android.app.Activity: void onCreate(android.os.Bundle)>",
    "<android.content.SharedPreferences$Editor: boolean commit()>",
    "<android.widget.ArrayAdapter: void setDropDownViewResource(int)>",
    "<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>",
    "<android.util.Log: int e(java.lang.String,java.lang.String)>",
    "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>",
    "<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>",
  )
}